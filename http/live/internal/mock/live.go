// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/atlaskerr/titan/http/live (interfaces: Liveness)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Liveness is a mock of Liveness interface
type Liveness struct {
	ctrl     *gomock.Controller
	recorder *LivenessMockRecorder
}

// LivenessMockRecorder is the mock recorder for Liveness
type LivenessMockRecorder struct {
	mock *Liveness
}

// NewLiveness creates a new mock instance
func NewLiveness(ctrl *gomock.Controller) *Liveness {
	mock := &Liveness{ctrl: ctrl}
	mock.recorder = &LivenessMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Liveness) EXPECT() *LivenessMockRecorder {
	return m.recorder
}

// Live mocks base method
func (m *Liveness) Live() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Live")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Live indicates an expected call of Live
func (mr *LivenessMockRecorder) Live() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Live", reflect.TypeOf((*Liveness)(nil).Live))
}
